<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Insert title here</title>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.2.8/ace.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/vue/1.0.16/vue.js"></script>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css">
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/js/bootstrap.min.js"></script>
<style type="text/css">
#editor {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}
.modal-dialog {
    /* new custom width */
    width: 1000px;
    height: 800px;
    /* must be half of the width, minus scrollbar on the left (30px) */
    
}
</style>
</head>
<body>
<div id="toReplace">
<table border="1">
	<tr>
		<td>Commit Message</td>
		<td>Upload Date</td>
		<td>Committer</td>
	</tr>
	<tr v-for="row in patch_rows">
		<td style="text-align:left" data-toggle="modal" data-target="#myModal" class="modal_parent" data-sha="{{row.sha}}" id="mod"><a @click="detail_commit">{{row.message}}</a></td>
		<td>{{row.date}}</td>
		<td>{{row.committer}}</td>
	</tr>
</table>	
<div id="myModal" class="modal fade" role="dialog" ng-app="editorApp">
					  <div class="modal-dialog">
					
					    <!-- Modal content-->
					    <div class="modal-content">
					      <div class="modal-header">
					        <button type="button" class="close" data-dismiss="modal">&times;</button>
					        <h4 class="modal-title">Detail Commit</h4>
					      </div>
					      <div class="modal-body">
					        <section class="content"  v-for="(index,row) in detailCommit_rows">
								<div class="row">
									<div class="col-xs-12">
										<div class="box">
											<div class="box-body">
												<table class="table table-bordered">
												<tr>
													<td>{{row.filename}}</td>
												</tr>
												<tr style="overflow: scroll; width: 510px; text-align:left;">
													<td><div :id="'edi_'+index"></div></td>
												</tr>
												</table>
											</div>
											<!-- /.box-body -->
										</div>
									</div>
								</div>
							</section>
					      </div>
					      <div class="modal-footer">
					      <button type="button" class="btn btn-danger rollback_btn" data-dismiss="modal">Rollback</button>
					        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
					      </div>
					    </div>
					
					  </div>
					</div>
					</div>
<script type="text/javascript">
var toReplace =  new Vue({
	  el: '#toReplace', //vue를 사용할 div id
	  data: {
		patch_rows:[],
	    detailCommit_rows:[]
	  },
	  methods: {
		  detail_commit:function(event){
			  	var sha=event.target.parentNode.getAttribute('data-sha');
	      		var self=this;
	      		self.detailCommit_rows=[];
	      		var promise1 = new Promise(function (resolve, reject) {
	      			$.ajax({
	    				url : 'https://api.github.com/repos/wosz812/Bitbox/commits/'+sha, //Default 박아놈
	    				type : 'GET',
	    				beforeSend : function(xhr) {
	    					xhr.setRequestHeader('Authorization', "Basic " + btoa("yujiyeon:dbwldus26"));
	    				},
	    				data : {}
	    			}).done(function(response) {
	    				console.log(response);
	    				for(var i=0;i<response.files.length;i++){
	    					var filename=response.files[i].filename;
	    					var patch=response.files[i].patch;
	    					var strArray=filename.split(".");
	    					 var mtemp=strArray[strArray.length-1];
	    					self.detailCommit_rows.push({"filename":filename,"patch":patch});
	    				}
	    				resolve();
	    			});
	      		}).then(function(){  //여기 editor 수정부분
	      			//debugger;
	      			for(var i=0;i<self.detailCommit_rows.length;i++){
	      				//$("#editor"+i).text(self.detailCommit_rows[i].patch);
	      				var edit_id="edi_"+i;
	      				var editor = ace.edit(edit_id);
	      				console.log(self.detailCommit_rows[i].patch);
	      				editor.setTheme("ace/theme/monokai");
	      				editor.getSession().setMode("ace/mode/javascript");
	      				editor.getSession().setValue(self.detailCommit_rows[i].patch,1);

	      			}
	      		});
	      		
	      	}
	  }
	})

$(document).ready(function(){
	var promise1 = new Promise(function (resolve, reject) {
		  $.ajax({
  			url : "https://api.github.com/repos/wosz812/Bitbox/commits", //Default 박아놈
  			type : 'GET',
  			beforeSend : function(xhr) {
  			xhr.setRequestHeader('Authorization', "Basic " + btoa("yujiyeon:dbwldus26"));
  			},
  			data : {}
  		}).done(function(response) {
  			console.log(response);
  			for(var i=0;i<response.length;i++){
  				var sha=response[i].sha;
  				var message=response[i].commit.message;
  				var committer=response[i].commit.committer.name;
  				var date=response[i].commit.committer.date;
					toReplace.patch_rows.push({"sha":sha,"message":message,"committer":committer,"date":date});
  			}
  			resolve();
  		});
	})
	
});


	
/* var editor = ace.edit("editor");
editor.setTheme("ace/theme/monokai");
editor.getSession().setMode("ace/mode/javascript");
editor.getSession().setValue("var test");
 */

</script>
</body>
</html>
